#
# mandatory handlers section
# handle output for each logging "channel"
# i.e. console, file, smtp, syslog, http, ...
# each handler requires a corresponding configuration section below
#
[handlers]
keys=consoleHandler,fileHandler,nullHandler

#
# handle stdout output
# please note: args-commma syntax doesn't work with ocrd/all:2025-02-11
#
[handler_consoleHandler]
class=StreamHandler
formatter=defaultFormatter
# args=(sys.stdout,)

#
# handle output with logfile
#
[handler_fileHandler]
class=FileHandler
formatter=detailedFormatter
args=('ocrd.log','a+')

#
# prevent any output (c.f. logger_shapely)
#
[handler_nullHandler]
class=NullHandler
args=()

#
# optional: custom formatters section
#
[formatters]
keys=defaultFormatter,detailedFormatter

#
# default log format like from ocrd
#
[formatter_defaultFormatter]
format=%(asctime)s.%(msecs)03d %(levelname)s %(name)s - %(message)s
datefmt=%H:%M:%S

#
# additional context information including file and line
#
[formatter_detailedFormatter]
format=%(asctime)s %(levelname)s %(name)s [%(filename)s:%(lineno)d] - %(message)s
datefmt=%H:%M:%S

#
# mandatory loggers section
# all known loggers in option "keys" require
# corresponding configuration section below
#
[loggers]
keys=root,ocrd_processor,ocrd_workspace,ocrd_task,shapely

#
# default logger "root"
#
[logger_root]
level=CRITICAL
handlers=fileHandler,consoleHandler,nullHandler

#
# specific logging configurations
#
# please note: 
#     each logger's "qualname" must match logger label in corresponding module
#
# logger "ocrd_processor" reports profiling information
#
[logger_ocrd_processor]
level=INFO
handlers=fileHandler,consoleHandler
qualname=ocrd.process.profile
# 
# logger "ocrd_workspace" informs about added files and METS modifications
#
[logger_ocrd_workspace]
level=WARNING
handlers=fileHandler,consoleHandler
qualname=ocrd.cli.workspace
#
# information about started and finished tasks
#
[logger_ocrd_task]
level=WARNING
handlers=fileHandler,consoleHandler
qualname=ocrd.task_sequence
#
# silence shapely.geometry completely (c.f. handler_nullHandler)
# 
[logger_shapely]
handlers=nullHandler
qualname=shapely.geometry
